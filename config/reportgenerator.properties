###############################################################################
# 
# General report generator settings.
#
###############################################################################

## The relative (to the XLT installation directory) or absolute path of the 
## directory where test reports shall be stored (defaults to 'reports').
#com.xceptance.xlt.reportgenerator.reports = reports

## Whether to create links from the error entries in the load test report to the
## corresponding result browsers in the results directory. Valid values are
## "false" (default) and "true".
#com.xceptance.xlt.reportgenerator.linkToResultBrowsers = true

## The base URI to be prepended when generating links from errors to result
## browsers. Use this property to specify a custom path (for example
## "http://myhost/results") to the base directory that will contain the actual
## results directory of a certain load test. If not set, the report generator
## creates relative links from the report to the result browser directories.
#com.xceptance.xlt.reportgenerator.resultsBaseUri = http://myhost/results

## The number of threads to use during report generation (defaults to the number
## of available CPUs).
#com.xceptance.xlt.reportgenerator.threads = 2

## Whether to automatically remove any indexes from request names
## (i.e. "HomePage.1.27" -> "HomePage"), so no special request processing rule
## is required for that (defaults to false).
#com.xceptance.xlt.reportgenerator.requests.removeIndexes = true

## Whether events in the Event Details table will additionally be grouped by
## test case (defaults to true).
#com.xceptance.xlt.reportgenerator.events.groupByTestCase = false

## The maximum number of error charts shown in the Errors section (50 by default),
## configurable separately for request error charts, transaction error overview
## charts, and transaction error detail charts.
##   N > 0 ... create charts for the N most frequent errors only
##   N < 0 ... create charts for all errors (no limit)
##   N = 0 ... charts are disabled
#com.xceptance.xlt.reportgenerator.errors.requestErrorOverviewChartsLimit = 50
#com.xceptance.xlt.reportgenerator.errors.transactionErrorOverviewChartsLimit = 50
#com.xceptance.xlt.reportgenerator.errors.transactionErrorDetailChartsLimit = 50

## Width and height of the generated charts (in pixels).
com.xceptance.xlt.reportgenerator.charts.width = 900
com.xceptance.xlt.reportgenerator.charts.height = 300

## The PNG compression level to use when generating charts ([0..9], default: 6).
#com.xceptance.xlt.reportgenerator.charts.compressionLevel = 6

## The scale used for the y-axis in run time charts. Valid values are
## "linear" (default) and "logarithmic".
#com.xceptance.xlt.reportgenerator.charts.scale = logarithmic

## Sets a capping for run time charts. All run time values greater than the cap
## are not shown. The cap can be defined using two alternative methods. First,
## you may specify the capping value directly. Second, you may specify a factor
## that, when applied to the mean of all run time values, defines the ultimate
## capping value. The factor must be a double greater than 1. Note that capping
## values take precedence over capping factors. By default, there is no capping.
##
## Furthermore, you may configure the capping mode:
## - smart .... cap the chart only if necessary (ie. max > cap) [default]
## - always ... always cap the chart at the capping value
##
## Note that the capping value/factor and the capping mode can be defined
## separately for each chart type, but it is also possible to define a default
## that applies to all chart types.

#com.xceptance.xlt.reportgenerator.charts.cappingValue = 5000
#com.xceptance.xlt.reportgenerator.charts.cappingValue.transactions = 50000
#com.xceptance.xlt.reportgenerator.charts.cappingValue.actions = 10000
#com.xceptance.xlt.reportgenerator.charts.cappingValue.requests = 5000
#com.xceptance.xlt.reportgenerator.charts.cappingValue.custom = 1000

#com.xceptance.xlt.reportgenerator.charts.cappingFactor = 5
#com.xceptance.xlt.reportgenerator.charts.cappingFactor.transactions = 5
#com.xceptance.xlt.reportgenerator.charts.cappingFactor.actions = 5
#com.xceptance.xlt.reportgenerator.charts.cappingFactor.requests = 5
#com.xceptance.xlt.reportgenerator.charts.cappingFactor.custom = 5

#com.xceptance.xlt.reportgenerator.charts.cappingMode = always

## The percentage of values taken when calculating the moving average series.
com.xceptance.xlt.reportgenerator.charts.movingAverage.percentageOfValues = 5

###############################################################################
#
# Additional Moving Average Settings
# 
# When enabled this will draw additional moving averages in the same average chart.
# The values must be indexed and need a certain format.
#
# Format:
# 
#   com.xceptance.xlt.reportgenerator.charts.movingAverage.additional.<index>.<percentile|time|requests>
# 
#   index ........ Numeric value for indexing.
#
#   percentile ... The percentage of values taken when calculating the moving average series.
#
#   time ......... Time value to create the moving average. If the time is larger than the actual runtime,
#                  the value will not be shown in the charts.
#                  Allowed values are for example:
#                  example: 30m
#                  example: 1h30m                  
#                  example: 1h15m30s
#
#   requests ..... Integer value for requests. If the amount is above the actual request value
#                  the average will not be shown in the charts.
#
#   example: com.xceptance.xlt.reportgenerator.charts.movingAverage.additional.1.percentile = 22
#
###############################################################################

## The percentiles to show in runtime data tables. Specify them as a comma-
## separated list of double values in the range (0, 100].
## Defaults to "50, 95, 99, 99.9". If left empty, no percentiles will be shown.
com.xceptance.xlt.reportgenerator.runtimePercentiles = 50, 95, 99, 99.9

## The list of run time values [ms] that mark the boundaries of the run time 
## intervals which are used to segment the value range. For example, the values
## 1000 and 5000 segment the value range into three intervals: [0...1000],
## [0...5000] and [5001...]. These segments are shown separately in the 
## report to illustrate the compliance to certain service level agreements.
## If this settings is missing or left empty, no segments will be shown.
com.xceptance.xlt.reportgenerator.runtimeIntervalBoundaries = 1000, 3000, 5000

## It can be useful to mask certain configuration properties in the report,
## especially sensitive information such as password or account data.
## Configure a regular expression that matches (a sub-string of) the property
## names whose values you would like to be masked.
## If this setting is blank no masking will be performed at all.
## Default value: (?i)password
#com.xceptance.xlt.reportgenerator.maskPropertiesRegex = (?i)password


###############################################################################
# 
# Apdex Settings
#
# Format:
#
#   com.xceptance.xlt.reportgenerator.apdex.<actionGroup>.<actions|threshold>
#
#   actionGroup ... The symbolic name of a group of actions with the same
#                   performance requirements.
#
#   actions ....... A regular expression that describes all the actions in the
#                   current action group.
#
#   threshold ..... The threshold [s] above which the runtime of an action is no
#                   longer considered satisfactory.
#
# The special action group name "default" can be used to define the threshold
# for all remaining actions. No need to define a regex for them.
#
###############################################################################

## The threshold for all checkout-related actions.
#com.xceptance.xlt.reportgenerator.apdex.Checkout.actions = CO(Login|Billing|Shipping).*
#com.xceptance.xlt.reportgenerator.apdex.Checkout.threshold = 2.0

## The threshold for order placement.
#com.xceptance.xlt.reportgenerator.apdex.PlaceOrder.actions = COPlaceOrder
#com.xceptance.xlt.reportgenerator.apdex.PlaceOrder.threshold = 3.0

## The threshold for all other actions (defaults to 4.0).
com.xceptance.xlt.reportgenerator.apdex.default.threshold = 1.0

###############################################################################
# 
# Request Table Colorization Settings
#
# When enabled this will colorize the table cells at the request page according to your thresholds. 
# In order to do so, specify an interval and a target value. The colors will be interpolated from 
# green->light green->transparent->light red->red. If the value is close or even to the target then
# the cell will not be colorized. The closer the value is to one of the boundaries or even exceed it,
# the darker the green or red color will be, depending on the boundary.   
# 
# Format:
#
#  com.xceptance.xlt.reportgenerator.requests.table.colorization.<groupName>.matching = @matcher
#  com.xceptance.xlt.reportgenerator.requests.table.colorization.<groupName>.mean = @targetRange
#  com.xceptance.xlt.reportgenerator.requests.table.colorization.<groupName>.min = @targetRange
#  com.xceptance.xlt.reportgenerator.requests.table.colorization.<groupName>.max = @targetRange@
#  com.xceptance.xlt.reportgenerator.requests.table.colorization.<groupName>.percentile.<percentileName>.id = @percentileId
#  com.xceptance.xlt.reportgenerator.requests.table.colorization.<groupName>.percentile.<percentileName> = @targetRange
#  com.xceptance.xlt.reportgenerator.requests.table.colorization.<groupName>.segmentation.<segmentationName>.id = @segmentationId
#  com.xceptance.xlt.reportgenerator.requests.table.colorization.<groupName>.segmentation.<segmentationName> = @targetRange
#
#  <groupName> .......... A name, grouping a set of colorization rules. 
#                         Can be any valid property name except of "default" which is reserved to specify default rules.
#
#  <percentileName> ..... A name for the percentile colorization rule. Can be any valid property name.
#
#  <segmentationName> ... A name for the segmentation colorization rule. Can be any valid property name.
#
#  @matcher ............. A regular expression matched against the request names.
#                         Apply the colorization rules of the corresponding colorization groupName for each matching request row.
#                         Omit when using the default group. The default group is matching all.  
#
#  @targetRange ......... A whitespace separated list of numbers in the form of "<FROM> <TARGET> <TO>"
#                         "From" defines the lower boundary which is the 100% green value. 
#                         "To" is the upper boundary which is 100% red.
#                         "Target" is the neutral value which is white.
#
#                         Note: Setting <FROM> = <TARGET> will colorize the cells from white to red. No green cells will be visible.
#
#  @percentileId ........ One of the number values specified at "com.xceptance.xlt.reportgenerator.runtimePercentiles"
#
#  @segmentationId ...... One of the number values specified at "com.xceptance.xlt.reportgenerator.runtimeIntervalBoundaries"
#                         Use ">" to specify the last segmentation column which is the greater than column. 
#
#  Using Default Rules:
#    To use defaults, specify rules using "default" as <groupName>. When present the default rules are used 
#    if no other colorization group matched. The default group does not require a "matching" value since it matches all.
#
#  Note:
#    - If more than one colorization group (except of the default) is matching then the colorization is skipped for this row and 
#      a warning is printed out.
#    - If a colorization group is matching and one of the possible rules is missing then the corresponding cell is not colorized. 
#
###############################################################################

## Example Request Colorization Rules ##
## Default Colorization
## Apply same colorization rules for all requests using defaults.

## The mean runtimes should be less than 500ms. Everything below 250ms is perfect and everything above 1s is bad.
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.mean = 250 500 1000
#
## The min runtimes should be less than 250ms. Everything below 125ms is perfect and everything above 500ms is bad.
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.min = 125 250 500
#
## The max runtimes should be less than 5s. Everything below 2.5s is perfect and everything above 10s is bad.
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.max = 2500 5000 10000
#
## P50 should be below 500ms. Everything below 250ms is perfect and everything above 1s is bad.
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.percentile.p50.id = 50
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.percentile.p50 = 250 500 1000
#
## P95 should be below 1s. Everything below 500ms is perfect and everything above 2s is bad.
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.percentile.p95.id = 95
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.percentile.p95 = 500 1000 2000
#
## P99 should be below 2s. Everything below 1s is perfect and everything above 4s is bad.
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.percentile.p99.id = 99
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.percentile.p99 = 1000 2000 4000
#
## P99.9 should be below 4s. Everything below 2s is perfect and everything above 8s is bad.
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.percentile.p99_9.id = 99.9
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.percentile.p99_9 = 2000 4000 8000
#
## About 90% of the requests should not take longer than 1s. Everything less than 80% is bad.
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.segmentation.<1000.id = 1000 
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.segmentation.<1000 = 100 90 80
#
## About 95% of the requests should not take longer than 3s. Everything less than 90% is bad.
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.segmentation.<3000.id = 3000 
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.segmentation.<3000 = 100 95 90
#
## About 99% of the requests should not take longer than 5s. Everything less than 95% is bad.
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.segmentation.<5000.id = 5000
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.segmentation.<5000 = 100 99 95
#
## Up to about 1% of the requests can take longer than 5s. Everything above 5% is bad.
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.segmentation.>5000.id = >
#com.xceptance.xlt.reportgenerator.requests.table.colorization.default.segmentation.>5000 = 0 1 5
#
## Homepage Colorization
## Use specific colorization rules for the homepage request and overwrite the default group.
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.matching = Homepage
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.mean = 125 250 500
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.min = 50 125 250
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.max = 1500 3000 6000
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.percentile.p50.id = 50
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.percentile.p50 = 125 250 500
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.percentile.p95.id = 95
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.percentile.p95 = 250 500 1000
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.percentile.p99.id = 99
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.percentile.p99 = 1000 2000 4000
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.percentile.p99_9.id = 99.9
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.percentile.p99_9 = 2000 4000 8000
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.segmentation.<1000.id = 1000 
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.segmentation.<1000 = 100 97 95
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.segmentation.<3000.id = 3000 
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.segmentation.<3000 = 100 98 97
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.segmentation.<5000.id = 5000
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.segmentation.<5000 = 100 99 98
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.segmentation.>5000.id = >
#com.xceptance.xlt.reportgenerator.requests.table.colorization.homepage.segmentation.>5000 = 0 1 2

###############################################################################
# 
# XSL Transformations
#
# After generating the raw result data files, a couple of XSL transformations
# are performed to get viewable HTML report pages. These transformations are
# configured now.
#
# Format:
#
#   com.xceptance.xlt.reportgenerator.transformations.<idx>.<styleSheetFileName|outputFileName>
#
#   idx .................. The transformation index.
#
#   styleSheetFileName ... The XSL style sheet file to use. The file will be
#                          searched for in "<xlt>/config/xsl".
#
#   outputFileName ....... The output file name. Output files will be generated
#                          to the report's root directory.
#
###############################################################################

com.xceptance.xlt.reportgenerator.transformations.1.styleSheetFileName = index.xsl
com.xceptance.xlt.reportgenerator.transformations.1.outputFileName = index.html

com.xceptance.xlt.reportgenerator.transformations.2.styleSheetFileName = transactions.xsl
com.xceptance.xlt.reportgenerator.transformations.2.outputFileName = transactions.html

com.xceptance.xlt.reportgenerator.transformations.3.styleSheetFileName = actions.xsl
com.xceptance.xlt.reportgenerator.transformations.3.outputFileName = actions.html

com.xceptance.xlt.reportgenerator.transformations.4.styleSheetFileName = requests.xsl
com.xceptance.xlt.reportgenerator.transformations.4.outputFileName = requests.html

com.xceptance.xlt.reportgenerator.transformations.5.styleSheetFileName = custom-timers.xsl
com.xceptance.xlt.reportgenerator.transformations.5.outputFileName = custom-timers.html

com.xceptance.xlt.reportgenerator.transformations.6.styleSheetFileName = errors.xsl
com.xceptance.xlt.reportgenerator.transformations.6.outputFileName = errors.html

com.xceptance.xlt.reportgenerator.transformations.7.styleSheetFileName = agents.xsl
com.xceptance.xlt.reportgenerator.transformations.7.outputFileName = agents.html

com.xceptance.xlt.reportgenerator.transformations.8.styleSheetFileName = configuration.xsl
com.xceptance.xlt.reportgenerator.transformations.8.outputFileName = configuration.html

com.xceptance.xlt.reportgenerator.transformations.11.styleSheetFileName = external.xsl
com.xceptance.xlt.reportgenerator.transformations.11.outputFileName = external.html

com.xceptance.xlt.reportgenerator.transformations.12.styleSheetFileName = network.xsl
com.xceptance.xlt.reportgenerator.transformations.12.outputFileName = network.html

com.xceptance.xlt.reportgenerator.transformations.13.styleSheetFileName = custom-values.xsl
com.xceptance.xlt.reportgenerator.transformations.13.outputFileName = custom-values.html

com.xceptance.xlt.reportgenerator.transformations.14.styleSheetFileName = events.xsl
com.xceptance.xlt.reportgenerator.transformations.14.outputFileName = events.html

com.xceptance.xlt.reportgenerator.transformations.15.styleSheetFileName = page-load-timings.xsl
com.xceptance.xlt.reportgenerator.transformations.15.outputFileName = page-load-timings.html


###############################################################################
# 
# Register the recognized data record classes along with their type code.
#
# Format:
#
#   com.xceptance.xlt.reportgenerator.dataRecords.<typeCode> = <class>
#
###############################################################################

com.xceptance.xlt.reportgenerator.dataRecords.T = com.xceptance.xlt.api.engine.TransactionData
com.xceptance.xlt.reportgenerator.dataRecords.A = com.xceptance.xlt.api.engine.ActionData
com.xceptance.xlt.reportgenerator.dataRecords.R = com.xceptance.xlt.api.engine.RequestData
com.xceptance.xlt.reportgenerator.dataRecords.C = com.xceptance.xlt.api.engine.CustomData
com.xceptance.xlt.reportgenerator.dataRecords.E = com.xceptance.xlt.api.engine.EventData
com.xceptance.xlt.reportgenerator.dataRecords.J = com.xceptance.xlt.agent.JvmResourceUsageData
com.xceptance.xlt.reportgenerator.dataRecords.V = com.xceptance.xlt.api.engine.CustomValue
com.xceptance.xlt.reportgenerator.dataRecords.P = com.xceptance.xlt.api.engine.PageLoadTimingData


###############################################################################
#
# Register the known report fragment provider classes.
#
# Format:
#
#   com.xceptance.xlt.reportgenerator.providers.<id> = <class>
#
###############################################################################

com.xceptance.xlt.reportgenerator.providers.1 = com.xceptance.xlt.report.providers.GeneralReportProvider
com.xceptance.xlt.reportgenerator.providers.2 = com.xceptance.xlt.report.providers.TransactionsReportProvider
com.xceptance.xlt.reportgenerator.providers.3 = com.xceptance.xlt.report.providers.ActionsReportProvider
com.xceptance.xlt.reportgenerator.providers.4 = com.xceptance.xlt.report.providers.RequestsReportProvider
com.xceptance.xlt.reportgenerator.providers.5 = com.xceptance.xlt.report.providers.CustomTimersReportProvider
com.xceptance.xlt.reportgenerator.providers.6 = com.xceptance.xlt.report.providers.ErrorsReportProvider
com.xceptance.xlt.reportgenerator.providers.7 = com.xceptance.xlt.report.providers.ResponseCodesReportProvider
com.xceptance.xlt.reportgenerator.providers.8 = com.xceptance.xlt.report.providers.ConfigurationReportProvider
com.xceptance.xlt.reportgenerator.providers.9 = com.xceptance.xlt.report.providers.AgentsReportProvider
com.xceptance.xlt.reportgenerator.providers.10 = com.xceptance.xlt.report.providers.TestReportConfigurationReportProvider
com.xceptance.xlt.reportgenerator.providers.11 = com.xceptance.xlt.report.providers.EventsReportProvider
com.xceptance.xlt.reportgenerator.providers.12 = com.xceptance.xlt.report.providers.CustomValuesReportProvider
com.xceptance.xlt.reportgenerator.providers.13 = com.xceptance.xlt.report.providers.ContentTypesReportProvider
com.xceptance.xlt.reportgenerator.providers.14 = com.xceptance.xlt.report.providers.HostsReportProvider
com.xceptance.xlt.reportgenerator.providers.15 = com.xceptance.xlt.report.providers.SummaryReportProvider
com.xceptance.xlt.reportgenerator.providers.16 = com.xceptance.xlt.report.providers.PageLoadTimingsReportProvider


###############################################################################
#
# Configure the log system.
#
###############################################################################

rootLogger.appenderRef.file.ref = File
rootLogger.level = warn

appender.file.name = File
appender.file.type = RollingFile
appender.file.fileName = ${sys:com.xceptance.xlt.home}/log/reportgenerator.log
appender.file.filePattern = ${sys:com.xceptance.xlt.home}/log/reportgenerator-%i.log
appender.file.policies.type = Policies
appender.file.policies.size.type = SizeBasedTriggeringPolicy
appender.file.policies.size.size = 10MB
appender.file.strategy.type = DefaultRolloverStrategy
appender.file.strategy.max = 9
appender.file.layout.type = PatternLayout
appender.file.layout.pattern = [%d{yyyy/MM/dd-HH:mm:ss,SSS}] %-5p [%t] %c - %m%n
