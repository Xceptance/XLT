<?xml version="1.0"?>

<project name="Resultbrowser" basedir="..">

    <!-- Read in build properties file. -->
    <property file="build.properties" />

    <!-- resultbrowser bundling properties -->
    <property name="build.resultbrowser.dir" value="resultbrowser" />

    <!-- target files -->
    <property name="source.file.index" value="${resultbrowser.dir.source}/index_bundle.html" />
    <property name="source.file.harviewer" value="${resultbrowser.dir.source}/harviewer_bundle.html" />
    <property name="target.file.index" value="${resultbrowser.dir.target}/index.html" />
    <property name="target.file.harviewer" value="${resultbrowser.dir.target}/harviewer.html" />

    <!-- Macro to handle OS specific Node.js call. -->
    <macrodef name="exec-node">
        <attribute name="module" description="The name of the NodeJS module to execute" />
        <attribute name="failonerror" default="true" description="Fail if the exit code is not 0" />
        <attribute name="dir" description="Directory to execute task" />
        <element name="args" implicit="yes" description="Argument to pass to the exec task" />
        <sequential>
            <exec executable="cmd.exe" dir="@{dir}" failonerror="@{failonerror}" osfamily="winnt" logError="true">
                <arg line="/c  @{module}" />
                <args />
            </exec>
            <exec executable="@{module}" dir="@{dir}" failonerror="@{failonerror}" osfamily="unix" logError="true">
                <args />
            </exec>
        </sequential>
    </macrodef>

    <!-- Check for JS/CSS/images into HTML. -->
    <target name="resultbrowser.check">
        <dependset>
            <srcfileset dir="${resultbrowser.dir.source}" includes="*.html" erroronmissingdir="false" />
            <targetfileset dir="${resultbrowser.dir.target}" includes="**/*" erroronmissingdir="false" />
        </dependset>
        <condition property="resultbrowser.present">
            <resourcecount when="gt" count="0">
                <fileset dir="${resultbrowser.dir.target}" includes="**/*" erroronmissingdir="false" />
            </resourcecount>
        </condition>
    </target>

    <!-- Bundle JS/CSS/images into HTML. -->
    <target name="resultbrowser.bundle">
        <exec-node dir="${build.resultbrowser.dir}" module="npm" failonerror="true">
            <arg value="run" />
            <arg value="build" />
        </exec-node>
    </target>

    <!-- Copy necessary files. -->
    <target name="resultbrowser.copy" depends="resultbrowser.check, resultbrowser.bundle" unless="resultbrowser.present">

        <!-- copy index_bundle.html and rename it to index.html -->
        <copy file="${source.file.index}" tofile="${target.file.index}" flatten="true" />

        <!-- copy harviewer_bundle.html and rename it to harviewer.html -->
        <copy file="${source.file.harviewer}" tofile="${target.file.harviewer}" flatten="true" />

    </target>

    <!-- Build HTML for resultbrowser. -->
    <target name="resultbrowser.build">
        <antcall target="resultbrowser.copy" inheritrefs="true" />
    </target>

</project>
