################################################################################
#
# Load Test Profile Configuration
#
# Define the load test cases to be run in parallel by the XLT agents.
#
# Format:
#
#   com.xceptance.xlt.loadtests.<testID>.<setting> = <value>
#
# For "<testID>" use any proper name. The supported values for "<setting>" are:
#
#   class ................. the test class name
#   users ................. the number of threads that run the test in parallel (REQUIRED)
#   iterations ............ the number of iterations per thread
#   arrivalRate ........... the number of transactions per hour
#   initialDelay .......... the number of seconds to wait at the beginning
#   warmUpPeriod .......... the number of seconds to run without performing measurements
#   measurementPeriod ..... the number of seconds to perform measurements (REQUIRED)
#   shutdownPeriod ........ the number of seconds to continue without performing measurements
#   rampUpInitialValue .... the initial value to start with when ramping up the load parameter
#   rampUpPeriod .......... the time period to steadily increase the load parameter
#   rampUpSteadyPeriod .... the time period between ramp-up steps
#   rampUpStepSize ........ the value to step-wise increase the load parameter during ramp-up
#   loadFactor ............ the factor to apply to users (and arrivalRate if defined)
#   clientPerformanceTest . whether this test should be run as client-side performance test
#
# The "arrivalRate" value influences the way the load is generated. If omitted,
# the system generates a constant load based on the number of concurrent users.
# If specified, the system generates load with a cluster-wide constant arrival
# rate. In the latter case, the maximum load is limited by the number of
# concurrent users. Note that an arrival rate is only supported for
# non-iteration based load tests.
#
# Note that *variable load profiles* are supported as well. To this end, define
# a load function instead of a fixed value for either "users", "arrivalRate",
# or "loadFactor". See the user manual for more information.
#
# The following figure shows the relationship between the various settings:
#
#     : initialDelay :   warmUpPeriod   : measurementPeriod : shutdownPeriod :	
#     :              :                  :                   :                :
#     /\             :                  :                   :                :
#   L |              :                  :                   :                :
#   o |              :                  :                   :                :
#   a |              :                **************************************** 
#   d |              :            ****:
#     |              :        ****    :
#     |              :    ****        :
#     |              :****            :
#     +--------------*----------------------------------------------------------->
#     :              :                :                                      Time
#     : initialDelay :  rampUpPeriod  :
#
# The "warmUpPeriod" is the time we will give the load to level out before
# taking measurements, and it starts directly after the "initialDelay". This is
# done to minimize discrepancies that could be caused by applications and other
# systems starting up and not yet operating at an optimal level. Once this time
# has elapsed, the stable load will be measured during the "measurementPeriod".
# A "shutdownPeriod" can be set in which the users can orderly finish their last
# transaction.
#
# The "rampUpPeriod" setting is independent of the "warmUpPeriod", 
# "measurementPeriod", and "shutdownPeriod" settings and dictates the time that
# it will take for the load parameter to increase to 100% after the initial
# delay. As an alternative there is the "rampUpSteadyPeriod" that describes the
# period of a single step. The "rampUpPeriod" and the "rampUpSteadyPeriod" are 
# mutually exclusive. Note that the ramp-up settings are applied to the arrival
# rate load parameter if an arrival rate is specified, otherwise to the user 
# count load parameter.
#
# All time period values can be specified in one of the following formats:
#   - total number of seconds
#     examples: '1234s' or '1234'
#   - natural style
#     examples: '0h12m0s', '0h12m', '12m0s' or '12m'
#   - digit style
#     examples: '1:23', '01:23', '0:1:23' or '0:01:23' 
#
################################################################################

## The list of active test cases.
com.xceptance.xlt.loadtests = TOrder
#com.xceptance.xlt.loadtests = TAddToCart TBrowse TGuestOrder TRegister TSearch
#com.xceptance.xlt.loadtests = TAddToCart TBrowse TCheckout TGuestCheckout TGuestOrder TOrder TRegister TSearch TVisit

## The test comment.
#com.xceptance.xlt.loadtests.comment = Test run using the sample test suite.

## The default load test settings for all test cases. These global settings may
## be overridden by test case specific values. See below.
#com.xceptance.xlt.loadtests.default.users = 5
#com.xceptance.xlt.loadtests.default.iterations = 100
#com.xceptance.xlt.loadtests.default.arrivalRate = 3600
#com.xceptance.xlt.loadtests.default.initialDelay = 0
#com.xceptance.xlt.loadtests.default.warmUpPeriod = 30s
com.xceptance.xlt.loadtests.default.measurementPeriod = 5m
#com.xceptance.xlt.loadtests.default.shutdownPeriod = 30s
#com.xceptance.xlt.loadtests.default.rampUpInitialValue = 1
com.xceptance.xlt.loadtests.default.rampUpPeriod = 30s
#com.xceptance.xlt.loadtests.default.rampUpSteadyPeriod = 1s
#com.xceptance.xlt.loadtests.default.rampUpStepSize = 1
#com.xceptance.xlt.loadtests.default.loadFactor = 1.0


## Test case specific configuration.
com.xceptance.xlt.loadtests.TAddToCart.users = 1
#com.xceptance.xlt.loadtests.TAddToCart.arrivalRate = 400

com.xceptance.xlt.loadtests.TBrowse.users = 1
#com.xceptance.xlt.loadtests.TBrowse.arrivalRate = 2000

com.xceptance.xlt.loadtests.TCheckout.users = 1
#com.xceptance.xlt.loadtests.TCheckout.arrivalRate = 100

com.xceptance.xlt.loadtests.TGuestCheckout.users = 1
#com.xceptance.xlt.loadtests.TGuestCheckout.arrivalRate = 100

com.xceptance.xlt.loadtests.TGuestOrder.users = 1
#com.xceptance.xlt.loadtests.TGuestOrder.arrivalRate = 100

com.xceptance.xlt.loadtests.TOrder.users = 5
#com.xceptance.xlt.loadtests.TOrder.arrivalRate = 100

com.xceptance.xlt.loadtests.TRegister.users = 1
#com.xceptance.xlt.loadtests.TRegister.arrivalRate = 50

com.xceptance.xlt.loadtests.TSearch.users = 1
#com.xceptance.xlt.loadtests.TSearch.arrivalRate = 2000

com.xceptance.xlt.loadtests.TVisit.users = 1
#com.xceptance.xlt.loadtests.TVisit.arrivalRate = 500

## Enable live reporting via OpenTelemetry
xlt.reporting.otel.enabled = true

## OpenTelemetry Settings (defaults set by XLT/OpenTelemetrySDK are commented out)
#otel.logs.exporter = otlp
#otel.exporter.otlp.endpoint = http://localhost:4318
#otel.exporter.otlp.protocol = http/protobuf
## Batch Log Record Processor
#otel.blrp.schedule.delay = 2000
### Defaults set by OpenTelemetrySDK
#otel.blrp.max.queue.size = 2048
#otel.blrp.max.export.batch.size = 512
## Custom headers and resource attributes
otel.exporter.otlp.headers = X-XLT-OTel-Secret=Not-so-secret
otel.resource.attributes=xtc.tenant=myTenant,xtc.project=myProject,xtc.loadTest=myLoadTest

